                         sundialsTB
                A MATLAB interface to SUNDIALS
                   Release 2.2.0, March 2006

                        Radu Serban
         Center for Applied Scientific Computing, LLNL


sundialsTB provides a MATLAB interface to two of the SUNDIALS solvers:
  CVODES: a variable-order, variable-step ODE solver with sensitivity 
          analysis capabilities
  KINSOL: a nonlinear system solver

The core of each MATLAB interface in sundialsTB is a single mex file 
which interfaces to the various user-callable functions for that solver. 
However, this mex file should not be called directly, but rather through 
the user-callable functions provided for each MATLAB interface.

The distribution file also contains a user guide (PDF and PS), as well 
as several examples. An HTML version of the documentation is available 
on the SUNDIALS website (www.llnl.gov/CASC/sundials)

sundialsTB v. 2.2.0 requires SUNDIALS v 2.2.0 and, optionally (for parallel support), 
MPITB with LAM 7.1.1 for MPI-2 features.

SUNDIALS: http://www.llnl.gov/CASC/sundials
MPITB:    http://atc.ugr.es/javier-bin/mpitb_eng
LAM:      http://www.lam-mpi.org/


A. Documentation
----------------

/sundialsTB/doc contains PostScript and PDF files for the sundialsTB User Guide.
An HTML version of the user guide is available on the SUNDIALS web site at
http://www.llnl.gov/CASC/sundials/documentation/stb_guide/sundialsTB.html

B. Installation
---------------

Installation of the toolbox consists of the following 5 steps, explained in the sequel:
1. Choose ubication
2. Decompress and untar
3. Configuring MATLAB's startup
4. Compiling MEX files
5. Testing the installation


1. Choose ubication

1.1. sundialsTB for all MATLAB users (not usual)
     Assume MATLAB is installed under $MATLAB=/usr/local/matlab7

     Place sundialsTB where toolboxes are usually stored:
     % cd /usr/local/matlab7/toolbox

1.2. sundialsTB for just one user (usual configuration)
 
     Place sundialsTB in your "matlab" working subdir:
     % cd ~/matlab

2. Decompress and untar

% tar zxvf <wherever>/sundialsTB.tar.gz

or

% cp <wherever>/sundialsTB.tar.gz
% gunzip sundialsTB.tar.gz
% tar xvf sundialsTB.tar
% rm sundialsTB.tar

Now there is a ~/matlab/sundialsTB (or $MATLAB/toolbox/sundialsTB) subdirectory.


3. Configuring MATLAB's startup

sundialsTB comes with a startup_STB.m file in the top subdirectory

3.1. sundialsTB for all MATLAB users (not usual)
     Assume MATLAB is installed under $MATLAB=/usr/local/matlab7

     Add sundialsTB startup to the system-wide startup file

     % cd $MATLAB/toolbox/local
     % ln -s ../sundialsTB/startup_STB.m .

     and add these lines to your original local startup.m

     % SUNDIALS Toolbox startup M-file, if it exists.
     if exist('startup_STB','file')
        startup_STB
     end

3.2. sundialsTB for just one user (usual configuration)
     Assume you do not need to keep any previously existing startup.m

     % cd ~/matlab
     % ln -s sundialsTB/startup_STB.m startup.m

     If you already had a startup.m, use the method described above,
     first linking startup_STB.m to the destination subdir and then
     editing ~/matlab/startup.m to run startup_STB.m

3.3  Since symbolic links do not work well with Matlab under Windows,
     a different alternative of setting-up the startup is as follows:

     Copy startup_STB next to MATLAB's startup.m and add these lines
     to startup.m

     % SUNDIALS Toolbox startup M-file
     startup('path_to_sundialsTB')

     using the optional argument of startup_STB to explicitly spceify
     the location of sundialsTB.

4. Compiling MEX files

To facilitate the compilation of sundialsTB on platforms that do not have
a make system, we rely on MATLAB's mex command. Compilation of sundialsTB
is done by running from under MATLAB the install_STB.m script which is
present in the sundialsTB top directory.

4.1. If you have not already done so, download and unpack SUNDIALS.
     Assume SUNDIALS is now located in /path/to/sundials

4.2. Launch matlab in sundialsTB:
     % cd $MATLAB/toolbox/sundialsTB
     % matlab
          or
     % cd ~/matlab/sundialsTB    
     % matlab

4.3. Run the install_STB matlab script.
     You will be asked for the location of the SUNDIALS source tree. 
     Input /path/to/sundials.

     Note that parallel support will be compiled into the MEX files only if
     ALL of the following conditions are met:
     - $LAMHOME is defined
     - $MPITB_ROOT is defined
     - /path/to/sundials/nvec_par exists 

5. Testing the installation

If everything went fine, you should now be able to try one of the CVODES
or KINSOL examples (in matlab, type 'help cvodes' or 'help kinsol' to see
a list of all examples available):

5.1. cd to the CVODES serial example directory:
     % cd $MATLAB/toolbox/sundialsTB/cvodes/examples_ser
             or
     % cd ~/matlab/sundialsTB/cvodes/examples_ser
5.2. Launch matlab and execute cvdx
          

C. References
-------------

[1] R. Serban, "sundialsTB, a MATLAB Interface to SUNDIALS", 
    LLLNL technical report UCRL-SM-212121, May 2005.

[2] A. C. Hindmarsh, P. N. Brown, K. E. Grant, S. L. Lee, R. Serban, 
    D. E. Shumaker, and C. S. Woodward, "SUNDIALS, Suite of Nonlinear and 
    Differential/Algebraic Equation Solvers," ACM Trans. Math. Softw., 
    31(3), pp. 363-396, 2005.


D. Releases
-----------

v. 2.2.0 - Mar. 2006
v. 2.1.1 - May. 2005 (first sundialsTB release)

E. Revision History
-------------------

v. 2.1.1 (May. 2005) ---> v. 2.2.0 (Mar. 2006)
---------------------------------------------------------

- New features
  - modified installation procedure to use a Matlab script
  - added sample Matlab startup file
  - expanded CVodeMonitor
  - added interface to KINSOL's performance monitoring function
    ('Verbose' option to KINSetOptions)

- Bug fixes
  - fixed bug in interface to quadrature integration which was causing
    a segmentatin violation when monitoring was turned on.

- Changes to user interface
  - updated to reflect changes to the SUNDIALS libraries in v.2.2.0
  - changed the interface for sensitivity analysis (both forward and
    adjoint) to follow more closely the CVODES calling sequence
  - optional inputs for forward sensitivity analysis are now provided
    through a separate function, CVodeSensSetOptions
  - removed NVM mex interface
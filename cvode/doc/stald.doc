
           A New CVODE Option -- Stability Limit Detection
                          Alan C. Hindmarsh

A new option was recently added to the CVODE solver.  It is activated
by setting the optional input iopt[SLDET] = 1.  This option provides
protection against potentially unstable behavior of the BDF (stiff)
multistep integration methods is certain situations, as described below.

When lmm = BDF is selected, CVODE uses Backward Differentiation
Formula (BDF) methods of orders 1 to 5.  At order 1 or 2, the BDF
method is A-stable, meaning that for any complex constant lambda in
the open left half-plane, the method is unconditionally stable (for
any step size) for the standard scalar model problem dy/dt = lambda y.
For an ODE system, this means that, roughly speaking, as long as all
modes in the system are stable, the method is also stable for any
choice of step size, at least in the sense of a local linear stability
analysis.

At orders 3 to 5, the BDF methods are not A-stable, although they are
"stiffly stable."  In each case, in order for the method to be stable
at step size h on the scalar model problem, the product h*lambda must
lie in a "region of absolute stability."  That region excludes a
portion of the left half-plane that is concentrated near the imaginary
axis.  The size of that region of instability grows as the order
increases from 3 to 5.  What this means is that, when running BDF at
any of these orders, if an eigenvalue lambda of the system lies close
enough to the imaginary axis, the step sizes h for which the method is
stable are limited (at least according to the linear stability theory)
to a set that prevents h*lambda from leaving the stability region.
The meaning of "close enough" depends on the order.  At order 3, the
unstable region is much narrower than at order 5, so the potential for
unstable behavior grows with order.

System eigenvalues that are likely to run into this instability are
ones that correspond to weakly damped oscillations.  A pure undamped
oscillation corresponds to an eigenvalue on the imaginary axis.
Problems with modes of that kind call for different considerations,
since the oscillation generally must be followed by the solver, and
this requires step sizes (h ~ 1/frequency) that are stable for BDF
anyway.  But for a weakly damped oscillatory mode, the oscillation in
the solution is eventually damped to the noise level, and at that time
it is important that the solver not be restricted to step sizes on the
order of 1/frequency.  It is in this situation that the new option may
be of great value.

In terms of partial differential equations, the typical problems for
which the stability limit detection option is appropriate are
semi-discrete ODE systems (i.e. discretized in space) from PDEs with
advection and diffusion, but with advection dominating over diffusion.
Diffusion alone produces pure decay modes, while advection tends to
produce undamped oscillatory modes.  A mix of the two with advection
dominant will have weakly damped oscillatory modes.

The option iopt[SLDET] = 1 activates an algorithm called STALD
(STAbility Limit Detection) that attempts to detect, in a direct
manner, the presence of a stability region boundary that is limiting
the step sizes in the presence of a weakly damped oscillation [1].
The algorithm supplements (but differs greatly from) the existing
algorithms in CVODE for choosing step size and order based on
estimated local truncation errors.  The STALD algorithm works directly
with history data that is readily available in CVODE.  If it concludes
that the step size is in fact stability-limited, it dictates a
reduction in the method order, regardless of the outcome of the
error-based algorithm.  The STALD algorithm has been tested in
combination with the VODE solver on linear advection-dominated
advection-diffusion problems [2], where it works well.  The
implementation in CVODE, carried out by Dan Shumaker, has been
successfully tested on linear and nonlinear advection-diffusion
problems, among others.

This stability limit detection option adds some overhead computational
cost to the CVODE solution.  (In timing tests, these overhead costs
have ranged from 2% to 7% of the total, depending on the size and
complexity of the problem, with lower relative costs for larger
problems.)  Therefore, it should be activated only when there is
reasonable expectation of modes in the user's system for which it is
appropriate.  In particular, if a CVODE/BDF solution with this option
turned off appears to take an inordinately large number of steps at
orders 3-5 for no apparent reason in terms of the solution time scale,
then there is a good chance that step sizes are being limited by
stability, and that turning on the option will improve the efficiency
of the solution.  The method order being used is available as the
optional output iopt[QU].  When running with iopt[SLDET] = 1, we
recommend monitoring also the optional output iopt[NOR], which is a
cumulative count of the number of order reductions dictated by the
STALD algorithm.


References:

[1] Alan C. Hindmarsh, "Detecting Stability Barriers in BDF Solvers,"
in Computational Ordinary Differential Equations, J. R. Cash and
I. Gladwell (Eds.), Oxford Univ. Press, 1992, pp. 87-96.  Also
available as LLNL Report UCRL-101197, June 1989.

[2] Alan C. Hindmarsh, "Avoiding BDF Stability Barriers in the MOL
Solution of Advection-Dominated Problems", Applied Numerical
Mathematics 17 (1995), pp. 311-318.



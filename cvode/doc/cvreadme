                   CVODE: Version of 6 March 2002
                   Notes on Installation and Usage
                 Scott D. Cohen and Alan C. Hindmarsh
              Center for Applied Scientific Computing, LLNL

CVODE [1,2] is a serial solver for stiff and nonstiff ODE systems
(initial value problem) given in explicit form dy/dt = f(t,y).  It is
written in the ANSI standard C.  In addition to the basic solver, this
package includes a module called CVBANDPRE, which provides a banded
preconditioner.

CVODE is part of a software family called SUNDIALS: SUite of Nonlinear
and DIfferential/ALgebraic equation Solvers.  This suite consists of
CVODE/PVODE, KINSOL, and IDA, and variants of these.  The directory
structure of the package supplied reflects this family relationship.

In the package supplied, each Makefile is set up so that typing 'make'
produces instructions for various make operations.  However, some of
the operations listed may refer to PVODE (the parallel extension of
CVODE) and thus may unavailable.

The notes below provide instructions for the installation of the CVODE
package.  For convenience, we include a brief summary of the usage of
CVODE (without CVBANDPRE), with notes on the locations of full user
documentation.  Following that is a list of references and a brief
history of revisions to the package.


A. Installation Notes for CVODE
-------------------------------

1. A tar file  cvode.tar  is provided.  To un-tar, type
   'tar xvf cvode.tar' in an appropriate working directory.  This
   generates a directory /SUNDIALS/ with subdirectories /shared/,
   /cvode/, and /lib/.

2. /SUNDIALS/cvode/doc/ contains this file, called cvreadme, a PostScript
   file cvudoc.ps for the CVODE user documentation [1], and a file
   cvaddenda with corrections to the usage as given in [1].

3. /SUNDIALS/shared/ contains files (header and source) that are shared
   with other members of SUNDIALS.

4. /SUNDIALS/cvode/source/ contains source files for CVODE and a makefile.  
   Typing 'make cvode' there generates all associated object files and a
   library file /SUNDIALS/lib/libcvode.a, then removes the object files.

5. /SUNDIALS/cvode/include/ contains all required header files for CVODE.

6. /SUNDIALS/cvode/examples/ contains six example programs and a makefile.
   (a) cvdx.c has a small kinetics system, solved with the stiff (BDF)
   method and CVDENSE for the linear solver.
   (b) cvbx.c has a simple semi-discretized PDE problem, solved with the
   stiff method and CVBAND for the linear solver.
   (c) cvkx.c has an ODE system based on a 2-D 2-species reaction-transport
   PDE problem, solved with the stiff method and the preconditioned
   Krylov linear solver CVSPGMR.
   (d) cvkxb.c solves the same problem as cvkx.c, but uses the band
   preconditioner module CVBANDPRE.
   (e) cvdemd.c is actually a set of examples.  It includes two different
   small problems, each run with 8 different method options, so as to
   exercise all of CVODE's direct method choices.  It is self-checking.
   (f) cvdemk.c is also a set of examples.  It has a 2-D 6-species
   reaction-diffusion PDE system, semi-discretized, run with the CVSPGMR
   linear solver, with 4 different method options.
      See the initial comments in each example source file for details on
   problem and solution parameters.   
      Typing 'make <ex>' in this subdirectory, where <ex> is cvdx, cvbx,
   cvkx, cvkxb, cvdemd, or cvdemk, finds the required header files etc. and
   generates the corresponding executable file.  Also included are sample
   outputs for the examples (with names ending in .out).  Outputs obtained
   by another user should agree with these, possibly with relatively small
   differences throughout.

7. Installing and using CVODE in a different environment requires only
   minor modifications to the various makefiles.  For the compilation of
   CVODE, check the file /SUNDIALS/cvode/source/cvode.mk, and if necessary
   modify the compiler names.
      To run CVODE on an application in a different directory location,
   the makefiles in /SUNDIALS/cvode/examples/ can be used with minor
   changes.  In the files Makefile and cvodex.mk, correct the various
   paths involved -- paths to /SUNDIALS/shared/, /SUNDIALS/cvode/include/,
   and /SUNDIALS/lib/.  Also check and correct the compiler/linker names
   and flags.


B. Summary of Usage of CVODE
--------------------------------

1.  y = N_VNew( N, NULL); ...                /* vector of initial values */
    ...

2.  cvmem = CVodeMalloc( N, f, ..., machEnv);       /* initializes CVODE */
    if (cvmem == NULL) return(1);
    ...

3.  CV<linear solver choice>      /* CVDense, CVBand, CVDiag, or CVSpgmr */
    ...

4.  ier = CVode(cvmem, tout, y, &t, itask);  /* in loop over tout values */
    ...

5.  CVodeFree(cvmem);        /* Free CVODE memory independent of machine */
    ...


Usage Notes:

(1) See [1] and the file /doc/cvaddenda for further user documentation.
    Additional usage details are also available from other sources:
    (a) See the file nvector.h for documentation of the vector kernels.
    (b) The paper [2] is a summary of CVODE with another short usage example.
    (c) For further assistance with usage, see the example programs, which
        are heavily annotated.

(2) CVODE can be called from a C++ application, by virtue of wrappers
    around all CVODE header files specifying C-style naming of functions.


C. References
-------------

[1] S. D. Cohen and A. C. Hindmarsh, CVODE User Guide, Lawrence
    Livermore National Laboratory report UCRL-MA-118618, September 1994.

[2] S. D. Cohen and A. C. Hindmarsh, CVODE, A Stiff/Nonstiff ODE Solver
    in C, Computers in Physics, vol. 10, no. 2 (March 1996), pp. 138-143.


D. Revision History (YYYYMMDD)
------------------------------

1993-94   DATE WRITTEN.  First released 2 September 1994.
19941122  In CVAllocVectors, fixed machEnv; minor comment corrections.
19950210  Revised ABS in llnlmath.h for portability.
19950214  Added 'static' to VScaleDiff (vector.c) and CVStep (cvode.c);
          expanded PSolveFn description in iterativ.h.
19960314  Corrected comment errors in cvode.*, band.h, llnltyps.h,
          llnlmath.h, vector.h.
19970811  Type names changed to LLNL_FLOAT etc.
19971120  In cvspgmr.h, added paragraph on using data from last f call.
19980120  Name changes: VECTOR to NVECTOR etc.; included expanded version of
          NVECTOR module in support of KINSOL.
19980508  Wrappers on header files for C++ use; type bool changed to boole;
          guards around definitions of macros MIN etc.
19981109  Revised legal notices; minor changes to nvector files.
19990119  Minor fixes to nvector.c and spgmr.c
20000316  SPGMR module modified for correct treatment of scalings;
          in cvode.c, first f call moved from CVodeMalloc to CVode;
          argument ewt removed from CVEwtSet, CVEwtSetSS, CVEwtSetSV;
          added new routine CVReInit for re-initialization of CVODE;
          file doc/Readme added, with corrections to usage;
          minor errors corrected throughout.
20000320  In NVECTOR module: augmented module with three kernels (in support
          of IDA); removed unused variable in N_VWL2Norm.
20000323  Added band preconditioner module CVBANDPRE, and cvkxb example.
20000719  Fixed memory leak bugs in CVReInit.
20000808  Fixed bug in N_VMin routine.
20011114  Added option for stability limit detection algorithm STALD.
20011115  In NVECTOR module, macros and routines added to support CVODES.
20011115  Reorganized DENSE module, with smalldense.* files separate.
20011214  All makefiles revised to use new CVODE/PVODE package structure.
20011220  Default type 'integer' changed to 'long int' in llnltyps.h.
20011220  Optional input ropt[HMAX] examined on every call to CVode.
20011220  Minor changes in cvode.c: comment errors fixed; conditional
          copy of acor in CVChooseEta; more robust tfuzz in CVodeDky. 
20011221  Optional input iopt[MXHNIL] = -1 means no t+h=t messages.
20011221  Minor corrections to all examples.
20011228  Added arguments jtimes (optional user J*v routine) and
          jac_data to CVSpgmr.  Revised examples accordingly.
20020111  Minor corrections to cvode.c, in initialization of hmax_inv,
          nscon, and sldeton.
20020114  Linear solver modules reorganized: linear solver specification
          routines perform malloc operations and return a completion flag.
          Re-use of linear solver memory is allowed if linear solver
          choice and parameters are unchanged.   All examples modified
          to receive and test new return flag.
20020114  Minor changes to cvode.c and cvspgmr.c: unused variables in
          declarations, missing (non-occurring) return values.
20020115  Minor corrections to cvode.h (CVReInit description), cvode.c
          (formatting in CVsldet), and cvbandpre.c (include added).
20020207  This file revised to reflect new package organization.
20020301  Added ReInit routine to CVDENSE, CVBAND, CVSPGMR modules.
          Corrected usage note on CVReInit in cvode.h.   Revised cvdemd
          and cvdemk to use CVReInitDense, CVReInitBand, CVReInitSpgmr. 
          Revised two relevant usage notes in cvaddenda file.
20020305  Added CVReInitBandPre routine to CVBANDPRE module.
          Revised cvkxb example to use CVReInitBandPre.

......................................................................

                            LEGAL NOTICES

This work was performed at the University of California, Lawrence
Livermore National Laboratory (UC LLNL) under contract no.
W-7405-ENG-48 (Contract 48) between the U.S. Department of Energy
(DOE) and The Regents of the University of California (the University)
for the operation of UC LLNL.

This work was prepared as an account of work sponsored by an agency of
the United States Government.  Neither the United States Government
nor the University of California nor any of their empolyees makes any
warranty, express or implied, or assumes any liability or
responsibility for the accuracy, completeness, or usefulness of any
information, apparatus, product, or process disclosed, or represents
that its use would not infringe privately owned rights.  Reference
herein to any specific commercial products, process, or service by
trade name, trademark, manufacturer, or otherwise, does not
necessarily constitute or imply its endorsement, recommendation, or
favoring by the United States Government or the University of
California.  The views and opinions of authors expressed herein do not
necessarily state or reflect those of the United States Government or
the University of California, and shall not be used for advertising or
product endorsement purposes.

CVODE has been declared to be in the Public Domain.

......................................................................

		   ADDENDUM TO USER'S GUIDE 
                       20 December 2001


Since the KINSOL User Documentation was published, several changes have been
made in KINSOL. Those changes are described here and will in time be merged 
into the KINSOL User Documentation.

1. An argument for the function KINSol has been deleted. Please note that machEnv
is no longer required by KINSol. The examples have been appropriately modified.
The routine SpgmrMalloc, from the SPGMR module, is now called by KINSpgmr 
rather than KINSpgmrInit. Likewise, the argument 'msgfp' has also been deleted 
from the argument list for KINSol also. It was seen as redundant to that set 
in the KINMalloc call.

2. The memory allocation process for KINSPGMR has been revised so that a call
to 'linit' will reinitialize the solver-specific counters, while the
linear solver memory allocation is done in KINSpgmr. To implement this,
it was necessary to have KINSpgmr return an integer value. Possible values
are KIN_MEM_NULL, KINSPGMR_MEM_FAIL, SPGMR_MEM_FAIL, and 0 (for success). 
Non-zero values indicate an error in memory allocation. This return value 
should be checked on a call to KINSpgmr.

3. The file fkinsol.c has been made into two similar files called 
fkinsols.c and fkinsolp.c. The first one is for serial  while the second 
for parallel programs. They share a common include file fkinsol.h. A few 
places referring to fkinsol.c in the user documentation will now be taken 
to apply to either fkinsolp.c or fkinsols.c, as appropriate.

4. A change made in modules and naming is that a subset of the dense module 
was found sufficient to support KINSOL. So, the files smalldense.c and 
smalldense.h have replaced those with dense.*.

5. The examples in directory /examples have been reorganized and simplified.
There are now simply five example codes. Each member of the set {kinxs, kinxp,
kinxbbd} solves a predator-prey PDE problem. The 's' suffix indicates a serial
version, 'p' indicates a parallel version, and 'bbd' indicates a (parallel)
BBD version. The simpler codes diagsf and diagpf are included to show the
appropriate application of the Fortran interface to KINSOL. Each of the example
codes has a corresponding 'make' file and 'run' file.

6. When running any of the parallel examples (kinxp, kinxbbd, diagpf), be sure
to modify the 'run' files as appropriate for your parallel system.  These
examples were run on a Sun Ultra cluster and required, for example, that the
option -machinefile <machinefilename> be supplied or the system default be
appropriately defined.

7. The optional input parameter iopt[NOMINEPS] has been added. This parameter 
is used to defeat the automatic computation of eps as the max of the current 
eps or a minimum value that is 0.01 * fnormtol. It is not of general use, 
however.

8. In using the KINBBDPRE module, the argument uround (unit roundoff) in the
call to KBBDAlloc has been removed.  (This quantity is available internally.)

9. The example programs kinxs, kinxp, and kinxbbd have been revised
considerably since the publication of the User Documentation.  In
particular, we suggest that users follow the file kinxs.c provided
with the package as a template for their serial applications, rather
than the listing of this file included in the document.

10. In the file llnltyps.h, the default for type 'integer' is now
'long int' instead of 'int'.  The usage instructions for changing this
type are given in that file.

11. The NVECTOR module has been reorganized throughout SUNDIALS. For 
more information, see the file idareadme and the files nvecreadme, 
nvector.h, nvector_serial.h, and nvector_parallel.h in /sundials/shared/.
A serial KINSOL example must include 'nvector_serial.h' and a parallel
KINSOL example must include 'nvector_parallel.h'.

12. Both the serial and parallel versions of KINSOL must now initialize the 
machine environment through calls to M_EnvInit_Serial and M_EnvInit_Parallel
(a rename of PVecInitMPI), respectively. As a consequence, the machine 
environment argument to KINMalloc (last argument) cannot be NULL anymore
in the serial version.

13. Vector accessor macros now have implementation-dependent names, such
as NV_DATA_S, NV_LENGTH_S, NV_Ith_S for the serial NVECTOR (nvector_serial.h)
and NV_DATA_P, NV_LOCLENGTH_P, NV_GLOBLENGTH_P, NV_Ith_P for the parallel
NVECTOR (nvector_parallel.h).

14. In using the KINBBDPRE module, the argument machEnv (machine environment) in the
call to KBBDAlloc has been removed.  (This quantity is available internally.)

15. For uisers of the FKINSOL package, the first argument of the Fortran user
routine for the system function F is now the problem size and not the local vector 
length.
 
16. The file llnltyps.h was renamed sundialstypes.h. 
The constant name
   LLNL_FLOAT      has been changed to  SUNDIALS_FLOAT, 
   LLNL_DOUBLE     has been changed to  SUNDIALS_DOUBLE, 
   LLNL_INT        has been changed to  SUNDIALS_INT,    and 
   LLNL_LONG       has been changed to  SUNDIALS_LONG.

To avoid conflicts with C++ methods the following type names have been changed:
   real    has been changed to realtype
   integer has been changed to integertype
   boole   has been changed to bolleantype

17. The files llnlmath.h and llnlmath.c have been renamed sundialsmath.h
and sundialsmath.c, respectively.
# -----------------------------------------------------------------
# Programmer(s): Cody J. Balos and David J. Gardner @ LLNL
# -----------------------------------------------------------------
# SUNDIALS Copyright Start
# Copyright (c) 2002-2023, Lawrence Livermore National Security
# and Southern Methodist University.
# All rights reserved.
#
# See the top-level LICENSE and NOTICE files for details.
#
# SPDX-License-Identifier: BSD-3-Clause
# SUNDIALS Copyright End
# -----------------------------------------------------------------

# Set the minimum required cmake version
cmake_minimum_required(VERSION @CMAKE_VERSION@)

# Set cache variables for C compilers and flags
set(CMAKE_C_COMPILER
  "@CMAKE_C_COMPILER@"
  CACHE FILEPATH "C compiler")

set(CMAKE_C_FLAGS
  "@CMAKE_C_FLAGS@"
  CACHE STRING "C compiler flags")

set(CMAKE_C_STANDARD
  "@CMAKE_C_STANDARD@"
  CACHE STRING "C standard")

# Set cache variables for C++ compilers and flags
set(CMAKE_CXX_COMPILER
  "@CMAKE_CXX_COMPILER@"
  CACHE FILEPATH "C++ compiler")

set(CMAKE_CXX_FLAGS
  "@CMAKE_CXX_FLAGS@"
  CACHE STRING "C++ compiler flags")

set(CMAKE_CXX_STANDARD
  "@CMAKE_CXX_STANDARD@"
  CACHE STRING "C++ standard")

# Set cache variables for MPI compiler and executable
set(MPI_C_COMPILER
  "@MPI_C_COMPILER@"
  CACHE FILEPATH "MPI C compiler")

set(MPI_CXX_COMPILER
  "@MPI_CXX_COMPILER@"
  CACHE FILEPATH "MPI C++ compiler")

set(MPIEXEC_EXECUTABLE
  "@MPIEXEC_EXECUTABLE@"
  CACHE FILEPATH "MPI executable")

# Specify project name and languages
project(examples C)

# Enable testing
include(CTest)

# Require MPI
find_package(MPI REQUIRED)

@EXAMPLES_FIND_PACKAGE@
# ------------------------------------------------------------------------------

# Specify the path to SUNDIALSConfig.cmake
set(SUNDIALS_DIR
  "@CMAKE_INSTALL_PREFIX@/@SUNDIALS_INSTALL_CMAKEDIR@"
  CACHE PATH "Location of SUNDIALSConfig.cmake")

# Find SUNDIALS
find_package(SUNDIALS
  COMPONENTS @EXAMPLES_CMAKE_COMPONENTS@
  REQUIRED NO_DEFAULT_PATH)

# Set the SUNDIALS targets
set(SUNDIALS_TARGETS
  @EXAMPLES_CMAKE_TARGETS@)

# Set any additional libraries needed
set(EXTRA_LIBS
  @EXAMPLES_EXTRA_LIBS@
  CACHE STRING "Additional libraries")

# Additional includes
include_directories(. @EXTRA_INCLUDES@)

# ------------------------------------------------------------------------------

# Set the names of the examples to be built and their dependencies
set(examples @EXAMPLES@)
set(examples_args @ALL_EXAMPLES_ARGS@)
set(examples_num_of_nodes @ALL_EXAMPLES_NUM_OF_NODES@)
set(examples_nprocs @ALL_EXAMPLES_NPROCS@)
set(examples_dependencies @EXAMPLES_DEPENDENCIES@)

list(LENGTH examples n_elems) # Total number of the elements in the every list
math(EXPR len "${n_elems}-1") # The last index in the every list

# Create targets for each example
foreach(idx RANGE ${len})

  list(GET examples ${idx} example)
  list(GET examples_args ${idx} example_args)
  list(GET examples_nprocs ${idx} example_nprocs)
  list(GET examples_num_of_nodes ${idx} example_num_of_nodes)

  # get filename without extension
  get_filename_component(example_target ${example} NAME_WE)

  # create target with example source files
  if(NOT TARGET ${example_target})
    add_executable(${example_target} ${example} ${examples_dependencies})
  endif()
  
  # libraries to link against
  target_link_libraries(${example_target}
    ${SUNDIALS_TARGETS} ${EXTRA_LIBS} MPI::MPI_C)

  # add the example to ctest
  if("${example_args}" STREQUAL "")
    set(test_name ${example})
  else()
    string(REGEX REPLACE " " "_" test_name ${example}_${example_args}_${example_nprocs})
  endif()
  separate_arguments(example_args_wo_quotes UNIX_COMMAND "${example_args}")
  add_test(NAME ${test_name} COMMAND mpirun -np ${example_nprocs} ${example_target} ${example_args_wo_quotes})

endforeach()
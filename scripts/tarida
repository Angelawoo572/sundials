#!/bin/sh
#
# File tarida: Script to build IDA tar-file.
# Version of 4 September 2002.
#

#---------------------------------------------------------
# Test if the script is executed from within its directory
#---------------------------------------------------------
scriptbase=`basename $0`
if [ ! -f "$scriptbase" ]
then
    echo "This script must be executed from within its directory"
    exit 1
fi

#-------------
# Define flags
#-------------
err=F   # Error flag
hlp=F   # Help flag
ser=F   # Serial flag
par=F   # Parallel flag
fnm=F   # File name flag

#------------------
# Process arguments
#------------------
if [ $# -eq 0 ]
then
   err=T
else
   while getopts asphf: name
   do
     case $name in
        h) hlp=T;;
        a) ser=T;par=T;;
        s) ser=T;;
        p) par=T;;
        f) fnm=T;filename=$OPTARG;;
        ?) err=T;;
     esac
   done
fi

#------------------
# Define some names
#------------------
scriptdir=`pwd`
distrodir=`echo $PWD | sed -e 's/scripts//'`
distrobase=`basename $distrodir`

#------------
# Print usage
#------------
if [ $err = "T" -o $hlp = "T" ]
then
    echo "Usage: tarida [option | file]"
    echo "   -a      : both serial and parallel"
    echo "   -s      : serial"
    echo "   -p      : parallel"
    echo "   -h      : help"
    echo "   -f file : output to file" 
    echo "Note: This script must be executed from within its directory" 
    echo "      Default file will be created in $distrodir"
    if [ $err = "T" -o \( $ser = "F" -a $par = "F" \) ]
    then
        exit 1
    fi
fi

#-----------------
# Create file name
#-----------------
if [ $fnm != "T" ]
then
    if [ $ser = "T" -a $par = "F" ]
    then
        filename="ida_ser.tar"
    elif [ $ser = "F" -a $par = "T" ]
    then
        filename="ida_par.tar"
    else
        filename="ida.tar"
    fi
    tarfile=$distrodir$filename
else
    filebase=`basename $filename`
    cd `dirname $filename`
    filedir=`pwd`
    tarfile=$filedir/$filebase
    cd $scriptdir
fi

#----------------
# Create tar file
#----------------

cd ../..
echo "Generate $distrobase distribution tar-file $tarfile"

# Add top level files
#--------------------

echo "  Add top-level files/directories"

tar cf $tarfile $distrobase/configure
tar uf $tarfile $distrobase/tarch

tar uf $tarfile $distrobase/Makefile.in

tar uf $tarfile $distrobase/INSTALL
tar uf $tarfile $distrobase/README

# Add SHARED module
#------------------

echo "  Add shared module"

tar uf $tarfile $distrobase/shared/LICENSE

tar uf $tarfile $distrobase/shared/doc/nvecreadme

tar uf $tarfile $distrobase/shared/include/sundialstypes.h
tar uf $tarfile $distrobase/shared/include/sundialsmath.h
tar uf $tarfile $distrobase/shared/include/nvector.h
tar uf $tarfile $distrobase/shared/include/dense.h
tar uf $tarfile $distrobase/shared/include/smalldense.h
tar uf $tarfile $distrobase/shared/include/band.h
tar uf $tarfile $distrobase/shared/include/spgmr.h
tar uf $tarfile $distrobase/shared/include/iterativ.h
tar uf $tarfile $distrobase/shared/include/fcmixpar.h

tar uf $tarfile $distrobase/shared/source/Makefile.in
tar uf $tarfile $distrobase/shared/source/sundialsmath.c
tar uf $tarfile $distrobase/shared/source/nvector.c
tar uf $tarfile $distrobase/shared/source/dense.c
tar uf $tarfile $distrobase/shared/source/smalldense.c
tar uf $tarfile $distrobase/shared/source/band.c
tar uf $tarfile $distrobase/shared/source/spgmr.c
tar uf $tarfile $distrobase/shared/source/iterativ.c

if [ $ser = "T" ]
then
    tar uf $tarfile $distrobase/nvec_ser/nvector_serial.h
    tar uf $tarfile $distrobase/nvec_ser/fnvector_serial.h

    tar uf $tarfile $distrobase/nvec_ser/Makefile.in
    tar uf $tarfile $distrobase/nvec_ser/nvector_serial.c
    tar uf $tarfile $distrobase/nvec_ser/fnvector_serial.c
fi

if [ $par = "T" ]
then
    tar uf $tarfile $distrobase/nvec_par/nvector_parallel.h
    tar uf $tarfile $distrobase/nvec_par/fnvector_parallel.h

    tar uf $tarfile $distrobase/nvec_par/Makefile.in
    tar uf $tarfile $distrobase/nvec_par/nvector_parallel.c
    tar uf $tarfile $distrobase/nvec_par/fnvector_parallel.c
fi

# Add IDA module
#---------------

echo "  Add ida module"

tar uf $tarfile $distrobase/ida/LICENSE

tar uf $tarfile $distrobase/ida/doc/idareadme
tar uf $tarfile $distrobase/ida/doc/idaaddenda
tar uf $tarfile $distrobase/ida/doc/idaudoc.ps
tar uf $tarfile $distrobase/ida/doc/idaudoc.pdf

tar uf $tarfile $distrobase/ida/include/ida.h
tar uf $tarfile $distrobase/ida/include/idadense.h
tar uf $tarfile $distrobase/ida/include/idaband.h
tar uf $tarfile $distrobase/ida/include/idaspgmr.h
tar uf $tarfile $distrobase/ida/include/idabbdpre.h

tar uf $tarfile $distrobase/ida/source/Makefile.in
tar uf $tarfile $distrobase/ida/source/ida.c
tar uf $tarfile $distrobase/ida/source/idadense.c
tar uf $tarfile $distrobase/ida/source/idaband.c
tar uf $tarfile $distrobase/ida/source/idaspgmr.c
tar uf $tarfile $distrobase/ida/source/idabbdpre.c

if [ $ser = "T" ]
then
    tar uf $tarfile $distrobase/ida/examples_ser/Makefile.in
    tar uf $tarfile $distrobase/ida/examples_ser/irobx.c
    tar uf $tarfile $distrobase/ida/examples_ser/irobx.out
    tar uf $tarfile $distrobase/ida/examples_ser/iheatsb.c
    tar uf $tarfile $distrobase/ida/examples_ser/iheatsb.out
    tar uf $tarfile $distrobase/ida/examples_ser/iheatsk.c
    tar uf $tarfile $distrobase/ida/examples_ser/iheatsk.out
    tar uf $tarfile $distrobase/ida/examples_ser/iwebsb.c
    tar uf $tarfile $distrobase/ida/examples_ser/iwebsb.out
fi

if [ $par = "T" ]
then
    tar uf $tarfile $distrobase/ida/examples_par/Makefile.in
    tar uf $tarfile $distrobase/ida/examples_par/iheatpk.c
    tar uf $tarfile $distrobase/ida/examples_par/iheatpk.out
    tar uf $tarfile $distrobase/ida/examples_par/iheatbbd.c
    tar uf $tarfile $distrobase/ida/examples_par/iheatbbd.out
    tar uf $tarfile $distrobase/ida/examples_par/iwebpk.c
    tar uf $tarfile $distrobase/ida/examples_par/iwebpk.out
    tar uf $tarfile $distrobase/ida/examples_par/iwebbbd.c
    tar uf $tarfile $distrobase/ida/examples_par/iwebbbd.out
fi

#----End of tarida script file----

diff --git a/examples/arkode/C_petsc/CMakeLists.txt b/examples/arkode/C_petsc/CMakeLists.txt
index f4aa3d7..cf32c23 100644
--- a/examples/arkode/C_petsc/CMakeLists.txt
+++ b/examples/arkode/C_petsc/CMakeLists.txt
@@ -62,7 +62,6 @@ foreach(example_tuple ${ARKODE_examples})
     ANSWER_FILE ${example}.out
     EXAMPLE_TYPE ${example_type})
 
-
   # libraries to link against
   target_link_libraries(${example} ${SUNDIALS_LIBS})
 
diff --git a/examples/sunmatrix/dense/test_sunmatrix_dense.c b/examples/sunmatrix/dense/test_sunmatrix_dense.c
index a9f622d..ae15f35 100644
--- a/examples/sunmatrix/dense/test_sunmatrix_dense.c
+++ b/examples/sunmatrix/dense/test_sunmatrix_dense.c
@@ -42,12 +42,12 @@
  * --------------------------------------------------------------------*/
 int main(int argc, char* argv[])
 {
-  int fails = 0;                 /* counter for test failures  */
-  sunindextype matrows, matcols; /* vector length              */
-  N_Vector x, y;                 /* test vectors               */
-  sunrealtype *xdata, *ydata;    /* pointers to vector data    */
-  SUNMatrix A, AT, I;            /* test matrices              */
-  sunrealtype *Adata, *ATdata, *Idata;  /* pointers to matrix data    */
+  int fails = 0;                       /* counter for test failures  */
+  sunindextype matrows, matcols;       /* vector length              */
+  N_Vector x, y;                       /* test vectors               */
+  sunrealtype *xdata, *ydata;          /* pointers to vector data    */
+  SUNMatrix A, AT, I;                  /* test matrices              */
+  sunrealtype *Adata, *ATdata, *Idata; /* pointers to matrix data    */
   int print_timing, square;
   sunindextype i, j, m, n;
   SUNContext sunctx;
@@ -94,11 +94,11 @@ int main(int argc, char* argv[])
   I = NULL;
 
   /* Create vectors and matrices */
-  x = N_VNew_Serial(matcols, sunctx);
-  y = N_VNew_Serial(matrows, sunctx);
-  A = SUNDenseMatrix(matrows, matcols, sunctx);
+  x  = N_VNew_Serial(matcols, sunctx);
+  y  = N_VNew_Serial(matrows, sunctx);
+  A  = SUNDenseMatrix(matrows, matcols, sunctx);
   AT = SUNDenseMatrix(matcols, matrows, sunctx);
-  I = NULL;
+  I  = NULL;
   if (square) { I = SUNDenseMatrix(matrows, matcols, sunctx); }
 
   /* Fill matrices and vectors */
diff --git a/examples/sunmatrix/test_sunmatrix.c b/examples/sunmatrix/test_sunmatrix.c
index aa12a20..9496d5f 100644
--- a/examples/sunmatrix/test_sunmatrix.c
+++ b/examples/sunmatrix/test_sunmatrix.c
@@ -576,7 +576,8 @@ int Test_SUNMatMatvec(SUNMatrix A, N_Vector x, N_Vector y, int myid)
 /* ----------------------------------------------------------------------
  * SUNMatMatvecTranspose Test (y should be correct A^T*x product)
  * --------------------------------------------------------------------*/
-int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x, N_Vector y, int myid)
+int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x,
+                               N_Vector y, int myid)
 {
   int failure;
   double start_time, stop_time;
@@ -586,7 +587,8 @@ int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x, N_Vector y
 
   if (A->ops->matvec == NULL)
   {
-    TEST_STATUS("    PASSED test -- SUNMatMatvecTranspose not implemented\n", myid);
+    TEST_STATUS("    PASSED test -- SUNMatMatvecTranspose not implemented\n",
+                myid);
     return (0);
   }
 
@@ -594,12 +596,13 @@ int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x, N_Vector y
   z = N_VClone(x); /* will be computed with MatvecTranspose */
 
   /* Compute reference solution */
-  failure    = SUNMatMatvec(AT, y, w); /* w = A^Ty */
+  failure = SUNMatMatvec(AT, y, w); /* w = A^Ty */
   sync_device(A);
   if (failure)
   {
-    TEST_STATUS2(">>> FAILED test -- SUNMatMatvecTranspose: SUNMatMatvec returned %d \n", failure,
-                  myid);
+    TEST_STATUS2(">>> FAILED test -- SUNMatMatvecTranspose: SUNMatMatvec "
+                 "returned %d \n",
+                 failure, myid);
     return (1);
   }
 
@@ -611,8 +614,9 @@ int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x, N_Vector y
 
   if (failure)
   {
-    TEST_STATUS2(">>> FAILED test -- SUNMatMatvecTranspose: SUNMatMatvecTranspose returned %d \n", failure,
-                  myid);
+    TEST_STATUS2(">>> FAILED test -- SUNMatMatvecTranspose: "
+                 "SUNMatMatvecTranspose returned %d \n",
+                 failure, myid);
     return (1);
   }
 
@@ -621,14 +625,16 @@ int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x, N_Vector y
   if (failure)
   {
     TEST_STATUS(">>> FAILED test -- SUNMatMatvecTranspose check \n", myid);
-    PRINT_TIME("    SUNMatMatvecTranspose Time: %22.15e \n \n", stop_time - start_time);
+    PRINT_TIME("    SUNMatMatvecTranspose Time: %22.15e \n \n",
+               stop_time - start_time);
     return (1);
   }
   else { TEST_STATUS("    PASSED test -- SUNMatMatvecTranspose \n", myid); }
 
   if (myid == 0)
   {
-    PRINT_TIME("    SUNMatMatvecTranspose Time: %22.15e \n \n", stop_time - start_time);
+    PRINT_TIME("    SUNMatMatvecTranspose Time: %22.15e \n \n",
+               stop_time - start_time);
   }
 
   N_VDestroy(w);
diff --git a/examples/sunmatrix/test_sunmatrix.h b/examples/sunmatrix/test_sunmatrix.h
index 21703b1..0c9fb8c 100644
--- a/examples/sunmatrix/test_sunmatrix.h
+++ b/examples/sunmatrix/test_sunmatrix.h
@@ -74,7 +74,8 @@ int Test_SUNMatScaleAdd(SUNMatrix A, SUNMatrix I, int myid);
 int Test_SUNMatScaleAddI(SUNMatrix A, SUNMatrix I, int myid);
 int Test_SUNMatMatvecSetup(SUNMatrix A, int myid);
 int Test_SUNMatMatvec(SUNMatrix A, N_Vector x, N_Vector y, int myid);
-int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x, N_Vector y, int myid);
+int Test_SUNMatMatvecTranspose(SUNMatrix A, SUNMatrix AT, N_Vector x,
+                               N_Vector y, int myid);
 int Test_SUNMatSpace(SUNMatrix A, int myid);
 
 /* Timing function */
diff --git a/include/sunmatrix/sunmatrix_dense.h b/include/sunmatrix/sunmatrix_dense.h
index 9ce5878..217ad90 100644
--- a/include/sunmatrix/sunmatrix_dense.h
+++ b/include/sunmatrix/sunmatrix_dense.h
@@ -99,8 +99,8 @@ SUNDIALS_EXPORT SUNErrCode SUNMatScaleAdd_Dense(sunrealtype c, SUNMatrix A,
 SUNDIALS_EXPORT SUNErrCode SUNMatScaleAddI_Dense(sunrealtype c, SUNMatrix A);
 SUNDIALS_EXPORT SUNErrCode SUNMatMatvec_Dense(SUNMatrix A, N_Vector x,
                                               N_Vector y);
-SUNDIALS_EXPORT SUNErrCode SUNMatMatvecTranspose_Dense(SUNMatrix A,
-                                                       N_Vector x, N_Vector y);
+SUNDIALS_EXPORT SUNErrCode SUNMatMatvecTranspose_Dense(SUNMatrix A, N_Vector x,
+                                                       N_Vector y);
 SUNDIALS_EXPORT SUNErrCode SUNMatSpace_Dense(SUNMatrix A, long int* lenrw,
                                              long int* leniw);
 
diff --git a/src/sunadjoint/CMakeLists.txt b/src/sunadjoint/CMakeLists.txt
index 0f56b0e..806f612 100644
--- a/src/sunadjoint/CMakeLists.txt
+++ b/src/sunadjoint/CMakeLists.txt
@@ -11,19 +11,14 @@
 # ---------------------------------------------------------------
 
 # Create a library out of the generic sundials modules
-sundials_add_library(sundials_adjoint
-  SOURCES
-    sunadjoint_stepper.c
-    sunadjoint_checkpointscheme.c
-    sunadjoint_checkpointscheme_basic.c
+sundials_add_library(
+  sundials_adjoint
+  SOURCES sunadjoint_stepper.c sunadjoint_checkpointscheme.c
+          sunadjoint_checkpointscheme_basic.c
   HEADERS
     ${SUNDIALS_SOURCE_DIR}/include/sunadjoint/sunadjoint_stepper.h
     ${SUNDIALS_SOURCE_DIR}/include/sunadjoint/sunadjoint_checkpointscheme.h
     ${SUNDIALS_SOURCE_DIR}/include/sunadjoint/sunadjoint_checkpointscheme_basic.h
-  LINK_LIBRARIES
-    PUBLIC sundials_core
-  OBJECT_LIBRARIES
-    sundials_sunmemsys_obj
-  INCLUDE_SUBDIR
-    sunadjoint
-)
+  LINK_LIBRARIES PUBLIC sundials_core
+  OBJECT_LIBRARIES sundials_sunmemsys_obj
+  INCLUDE_SUBDIR sunadjoint)
diff --git a/src/sundials/CMakeLists.txt b/src/sundials/CMakeLists.txt
index 5b9dd38..2ab91f1 100644
--- a/src/sundials/CMakeLists.txt
+++ b/src/sundials/CMakeLists.txt
@@ -100,8 +100,7 @@ set(sundials_SOURCES
     sundials_nvector.c
     sundials_stepper.c
     sundials_profiler.c
-    sundials_version.c
-  )
+    sundials_version.c)
 
 if(ENABLE_MPI)
   list(APPEND sundials_SOURCES sundials_mpi_errors.c)
@@ -111,9 +110,8 @@ endif()
 add_prefix(${SUNDIALS_SOURCE_DIR}/src/sundials/ sundials_SOURCES)
 
 if(ENABLE_MPI)
-  set(_link_mpi_if_needed PUBLIC
-    MPI::MPI_C
-    $<$<LINK_LANGUAGE:CXX>:MPI::MPI_CXX>)
+  set(_link_mpi_if_needed PUBLIC MPI::MPI_C
+                          $<$<LINK_LANGUAGE:CXX>:MPI::MPI_CXX>)
 endif()
 
 if(SUNDIALS_BUILD_WITH_PROFILING)
diff --git a/test/unit_tests/arkode/C_serial/CMakeLists.txt b/test/unit_tests/arkode/C_serial/CMakeLists.txt
index 5e84ab7..553d682 100644
--- a/test/unit_tests/arkode/C_serial/CMakeLists.txt
+++ b/test/unit_tests/arkode/C_serial/CMakeLists.txt
@@ -16,36 +16,35 @@
 
 # List of test tuples of the form "name\;args"
 set(ARKODE_unit_tests
-  "ark_test_arkstepsetforcing\;1 0"
-  "ark_test_arkstepsetforcing\;1 1"
-  "ark_test_arkstepsetforcing\;1 2"
-  "ark_test_arkstepsetforcing\;1 3"
-  "ark_test_arkstepsetforcing\;1 4"
-  "ark_test_arkstepsetforcing\;1 5"
-  "ark_test_arkstepsetforcing\;1 3 2.0 10.0"
-  "ark_test_arkstepsetforcing\;1 3 2.0 10.0 2.0 8.0"
-  "ark_test_arkstepsetforcing\;1 3 2.0 10.0 1.0 5.0"
-  "ark_test_getuserdata\;"
-  "ark_test_innerstepper\;"
-  "ark_test_interp\;-100"
-  "ark_test_interp\;-10000"
-  "ark_test_interp\;-1000000"
-  "ark_test_mass\;"
-  "ark_test_reset\;"
-  "ark_test_tstop\;"
-  "ark_test_sunadjoint\;--check-freq 1\;"
-  "ark_test_sunadjoint\;--check-freq 2\;"
-  "ark_test_sunadjoint\;--check-freq 5\;"
-  "ark_test_sunadjoint\;--check-freq 1 --no-stages\;"
-  "ark_test_sunadjoint\;--check-freq 2 --no-stages\;"
-  "ark_test_sunadjoint\;--check-freq 5 --no-stages\;"
-  "ark_test_sunadjoint\;--check-freq 1 --dont-keep\;"
-  "ark_test_sunadjoint\;--check-freq 2 --dont-keep\;"
-  "ark_test_sunadjoint\;--check-freq 5 --dont-keep\;"
-  "ark_test_sunadjoint\;--check-freq 1 --dont-keep --no-stages\;"
-  "ark_test_sunadjoint\;--check-freq 2 --dont-keep --no-stages\;"
-  "ark_test_sunadjoint\;--check-freq 5 --dont-keep --no-stages\;"
-  )
+    "ark_test_arkstepsetforcing\;1 0"
+    "ark_test_arkstepsetforcing\;1 1"
+    "ark_test_arkstepsetforcing\;1 2"
+    "ark_test_arkstepsetforcing\;1 3"
+    "ark_test_arkstepsetforcing\;1 4"
+    "ark_test_arkstepsetforcing\;1 5"
+    "ark_test_arkstepsetforcing\;1 3 2.0 10.0"
+    "ark_test_arkstepsetforcing\;1 3 2.0 10.0 2.0 8.0"
+    "ark_test_arkstepsetforcing\;1 3 2.0 10.0 1.0 5.0"
+    "ark_test_getuserdata\;"
+    "ark_test_innerstepper\;"
+    "ark_test_interp\;-100"
+    "ark_test_interp\;-10000"
+    "ark_test_interp\;-1000000"
+    "ark_test_mass\;"
+    "ark_test_reset\;"
+    "ark_test_tstop\;"
+    "ark_test_sunadjoint\;--check-freq 1\;"
+    "ark_test_sunadjoint\;--check-freq 2\;"
+    "ark_test_sunadjoint\;--check-freq 5\;"
+    "ark_test_sunadjoint\;--check-freq 1 --no-stages\;"
+    "ark_test_sunadjoint\;--check-freq 2 --no-stages\;"
+    "ark_test_sunadjoint\;--check-freq 5 --no-stages\;"
+    "ark_test_sunadjoint\;--check-freq 1 --dont-keep\;"
+    "ark_test_sunadjoint\;--check-freq 2 --dont-keep\;"
+    "ark_test_sunadjoint\;--check-freq 5 --dont-keep\;"
+    "ark_test_sunadjoint\;--check-freq 1 --dont-keep --no-stages\;"
+    "ark_test_sunadjoint\;--check-freq 2 --dont-keep --no-stages\;"
+    "ark_test_sunadjoint\;--check-freq 5 --dont-keep --no-stages\;")
 
 # Add the build and install targets for each test
 foreach(test_tuple ${ARKODE_unit_tests})
diff --git a/test/unit_tests/sunadjoint/CMakeLists.txt b/test/unit_tests/sunadjoint/CMakeLists.txt
index 186cec4..dc8e6e0 100644
--- a/test/unit_tests/sunadjoint/CMakeLists.txt
+++ b/test/unit_tests/sunadjoint/CMakeLists.txt
@@ -11,8 +11,7 @@
 # ---------------------------------------------------------------
 
 # List of test tuples of the form "name\;args"
-set(unit_tests
-  "test_sunadjointcheckpointscheme_basic\;")
+set(unit_tests "test_sunadjointcheckpointscheme_basic\;")
 
 # Add the build and install targets for each test
 if(TARGET GTest::gtest_main AND TARGET GTest::gmock)
@@ -22,10 +21,10 @@ if(TARGET GTest::gtest_main AND TARGET GTest::gmock)
     list(GET test_tuple 1 test_args)
 
     add_executable(${test} ${test}.cpp)
-    target_link_libraries(${test}
-      PRIVATE sundials_core sundials_adjoint sundials_nvecserial sundials_nvecmanyvector GTest::gtest_main GTest::gmock)
+    target_link_libraries(
+      ${test} PRIVATE sundials_core sundials_adjoint sundials_nvecserial
+                      sundials_nvecmanyvector GTest::gtest_main GTest::gmock)
 
     gtest_discover_tests(${test})
   endforeach()
 endif()
-
diff --git a/test/unit_tests/sundials/CMakeLists.txt b/test/unit_tests/sundials/CMakeLists.txt
index 19ffcb9..0265ae0 100644
--- a/test/unit_tests/sundials/CMakeLists.txt
+++ b/test/unit_tests/sundials/CMakeLists.txt
@@ -11,11 +11,8 @@
 # ---------------------------------------------------------------
 
 # List of test tuples of the form "name\;args"
-set(unit_tests
-  "test_sundials_errors\;"
-  "test_sundials_datanode\;"
-  "test_sundials_stlvector\;"
-  "test_sundials_hashmap\;")
+set(unit_tests "test_sundials_errors\;" "test_sundials_datanode\;"
+               "test_sundials_stlvector\;" "test_sundials_hashmap\;")
 
 # Add the build and install targets for each test
 if(TARGET GTest::gtest_main AND TARGET GTest::gmock)
@@ -25,10 +22,10 @@ if(TARGET GTest::gtest_main AND TARGET GTest::gmock)
     list(GET test_tuple 1 test_args)
 
     add_executable(${test} ${test}.cpp)
-    target_link_libraries(${test}
-      PRIVATE sundials_core sundials_nvecserial sundials_sunmemsys_obj GTest::gtest_main GTest::gmock)
+    target_link_libraries(
+      ${test} PRIVATE sundials_core sundials_nvecserial sundials_sunmemsys_obj
+                      GTest::gtest_main GTest::gmock)
 
     gtest_discover_tests(${test})
   endforeach()
 endif()
-

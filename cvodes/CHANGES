cvsdense.h cvsdense.c
  - added dimension n to CVDense (stored in the ls memory struct)
  - removed N from call to f
  - simplified interface to Jacobian routine

cvsband.h cvsband.c
  - added dimension n to CVBand (stored in the ls memory struct)
  - removed N from call to f
  - simplified interface to Jacobian routine

cvsdiag.h cvsdiag.c
  - removed N from calls to f

cvsspgmr.h cvsspgmr.c
  - removed N from definitions of CVSpgmrPrecondFn, CVSpgmrPSolveFn, CVSpgmrJtimesFn
  - removed N from call to N_VNew and f
  - compute sqrtN from a dot product now (done in CVSpgmr)
  - work space requirements now use lrw1 and liw1
  - simplified interface to Jtimes routine

cvsbandpre.h cvsbandpre.c
  - removed N from CVReInitBandPre
  - removed N from definitions of CVBandPrecond, CVBandPSolve
  - removed N from definition of CVBandPDQJac
  - removed N from call to f
  - N (obtained from CVBandPreAlloc) is stored in pdata

cvsbbdpre.h cvsbbdpre.c
  - removed N from definitions of CVBBDPrecond and CVBBDPSolve
  - removed N from call to N_VNew

cvodes.h  cvodes.c
  - added special treatment for quadrature variables
  - added more logic for reinitialization of forward sensi and quadrature integration
    (CVReInit resets sens=FALSE and quad=FALSE and therefore CVSensReInit and
    CVQuadReInit cannot tell whether their Malloc routines have been called
    previously. Introduced two new flags: sensMallocDone and quadMallocDone)
  - fixed a bug in CVDecreaseBDF for sensitivities!!!
  - changed CVReInit to CVodeReInit (same for CVSensReInit)
  - added CVodeGetEwt and CVodeGetEwtS
  - simplified user interface to Jacobian routines
  - simplified user interface to forward sensitivity RHS.
    For this, I had to add fS_data to CVodeSensMalloc (which is passed
    to all calls to fS). For consistency, I added fQ_data to 
    CVodeQuadMalloc. Also added these args. to the ReInit routines.
    In the internal DQ routines, fS_data carries cv_mem.
  - added dedicated user data pointer to sensitivity alloc routine
    (can be f_data, but doesn't have to)
  - removed N from definition of RhsFn, SensRhsFn, SensRhs1Fn
  - removed N and Nq from definition of QuadRhsFn
  - removed N from definition of CVodeMalloc 
  - removed Nq from CVodeQuadMalloc
  - removed N and Nq from cv_mem      
  - removed N and Nq from all calls to f, fQ, and N_VNew
  - work space requirements now use N_VSpace to get lrw1,liw1 and lrw1Q,liw1Q
  - shortened argument list for CV*EwtSet family of routines
  - combined norms are always max of WRMS norms
  - added the following user optional inputs:
    max number of Newton iterations (default 3) 
    max number of convergence failures (default 10)
    proportionality coefficient in the nonlinear convergence test (default 0.1)
    max number of error test failures (default 7)

cvodea.h  cvodea.c
  - changed CVReInitB to CVodeReInitB 
  - added CVodeQuadMallocB, CVodeQuadReInit and definition for QuadRhsFnB
  - removed NB from definitions of RhsFnB, QuadRhsFnB, CVSpgmrPrecondFnB, 
    CVSpgmrPSolveFnB, and CVSpgmrJtimesFnB
  - removed NB from definitions of CVBandPrecondB, CVBandPSolveB
  - removed NB from CVodeMallocB and NqB from CVodeQuadMallocB
  - added nB to CVDenseB and CVBandB
  - simplified argument lists of CVDenseJacFnB, CVBandJacFnB, CVSpgmrJtimesFnB

examples_ser  examples_par
  - updated to reflect changes to CVODES
  - output generated on Linux
  - changed cvfdx to use analytical sensitivity rhs
  - changed cvadx to a better conditioned derived function
  - cvadx now uses quadrature integration on the backward phase

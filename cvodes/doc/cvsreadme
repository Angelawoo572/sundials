                             CVODES 
                   Release 1.0, 4 September 2002
                   Notes on Installation and Usage
                  Alan C. Hindmarsh and Radu Serban
              Center for Applied Scientific Computing, LLNL

CVODES [1] is a solver for stiff and nonstiff ODE systems
(initial value problem) given in explicit form dy/dt = f(t,y) with
sensitivity analysis capabilities (both forward and adjoint modes).  
It is written in ANSI standard C.

CVODES can be used both on serial and parallel (MPI) computers.  The main
difference is in the NVECTOR module of vector kernels.  The desired
version is obtained when compiling the example files by linking the
appropriate library of NVECTOR kernels.  In the parallel version,
communication between processors is done with the MPI (Message Passage
Interface) system.  Throughout this document, we will refer to the
combination of CVODES with the serial implementation of the NVECTOR
module as "the serial version of CVODES".  Similarly, the combination of
CVODES with the parallel implementation of the NVECTOR module is called
"the parallel version of CVODES".

In addition, the two versions are different in the linear system
solvers available.  With the serial version of CVODES, both direct
(dense and band) solvers and a preconditioned Krylov (iterative)
solver are available, but in the parallel version only the Krylov
solver is available.  (An approximate diagonal Jacobian option is
available with both versions.)  For the serial version, there is a
banded preconditioner module called CVBANDPRE available for use with
the Krylov solver, while for the parallel version there is a
preconditioner module called CVBBDPRE which provides a
band-block-diagonal preconditioner.

CVODES is part of a software family called SUNDIALS: SUite of Nonlinear
and DIfferential/ALgebraic equation Solvers.  This suite consists of
CVODE, KINSOL, and IDA, and variants of these.  The directory
structure of the package supplied reflects this family relationship.

In the package supplied, each Makefile is set up so that typing 'make'
produces instructions for various make operations. In the package 
supplied here, the makefiles are set up to access a workstation cluster, 
but with commented lines for use on one or more other LLNL systems.  
Changes for other environments can be made easily.

The notes below provide instructions for the installation of the CVODES
package.  Following that are notes on usage and the location of the full 
user documentation.

A. Installation Notes for CVODES
--------------------------------

1. A tar file such as cvodes.tar is provided.  (The name depends on what
   subset of SUNDIALS was downloaded.)  Un-tar this file in a suitable
   working directory.  This generates a directory called /sundials/
   there,  with subdirectories /shared/, /cvodes/, /include/, and /lib/.

2. /sundials/cvodes/doc/ contains this file, called cvsreadme. 
   In addition, it contains a PostScript file cvs_guide.ps and a PDF
   file cvs_guide.pdf for the CVODES user document [1].

3. /sundials/shared/ contains files (header and source) that are shared
   with other members of SUNDIALS.  Installation requires two steps:
   (a) Typing 'make lib' in /sundials/shared/source/ generates a library
   file /sundials/shared/lib/libshared.***.a (where *** is a machine-
   dependent identifier), creates a symbolic link to this library in 
   /sundials/lib/ and symbolic links to the shared header files in
   /sundials/include/, and removes the corresponding object files.
   (b) Type 'make nvecserial' or 'make nvecparallel' (or both) in 
   /sundials/shared/source/, according to which versions of CVODES are
   being installed.  This generates library files libnvecserial.***.a
   and libfnvecserial.***.a  and/or libnvecparallel.***.a and 
   libfnvecparallel.***.a in /sundials/shared/lib/, creates symbolic
   links to these library files in /sundials/lib/ and symbolic links
   to the NVECTOR header files in /sundials/include/, and removes the
   corresponding object files.

4. /sundials/cvodes/source/ contains source files for CVODES and a
   Makefile.  Typing 'make lib' there generates a library file
   /sundials/cvodes/lib/libcvodes.***.a (where *** is a machine-
   dependent identifier), creates a symbolic link to this library in 
   /sundials/lib/ and symbolic links to the CVODES header files in
   /sundials/include/, and removes the corresponding object files.

5. /sundials/cvodes/include/ contains header files specific to CVODES.

6. /sundials/cvodes/examples/ contains a Makefile and nine example programs
   to illustrate the usage of CVODES for the integration of ODE IVP.
   For each example, there is a source file and a sample output, and
   the source file is commented with details of the problem and the
   setup for its solution with CVODES.
      The first six are examples for the serial version of CVODES:
   (a) cvdx.c has a small kinetics system, solved with the stiff (BDF)
   method and CVDENSE for the linear solver.
   (b) cvbx.c has a simple semi-discretized PDE problem, solved with the
   stiff method and CVBAND for the linear solver.
   (c) cvkx.c has an ODE system based on a 2-D 2-species reaction-transport
   PDE problem, solved with the stiff method and the preconditioned
   Krylov linear solver CVSPGMR.
   (d) cvkxb.c solves the same problem as cvkx.c, but uses the band
   preconditioner module CVBANDPRE.
   (e) cvdemd.c is actually a set of examples.  It includes two different
   small problems, each run with 8 different method options, so as to
   exercise all of CVODES's direct method choices.  It is self-checking.
   (f) cvdemk.c is also a set of examples.  It has a 2-D 6-species
   reaction-diffusion PDE system, semi-discretized, run with the CVSPGMR
   linear solver, with 4 different method options.
      The last three examples are for the parallel version of CVODES:
   (g) pvnx.c has an ODE system based on a 1-D PDE problem, solved with
   the nonstiff option.
   (h) pvkx.c has an ODE system based on a 2-D 2-species reaction-transport
   PDE problem, solved with the stiff (BDF) method and the preconditioned
   Krylov linear system method (SPGMR).
   (i) pvkxb.c solves the same problem as pvkx.c, but uses the band-
   block-diagonal preconditioner module CVBBDPRE.
      Typing 'make <ex>' in this subdirectory, where <ex> is any of the above
   nine example names (cvdx etc.), finds the required header files etc. and
   generates the corresponding executable file.  Also included are sample
   outputs for the examples (with names ending in .out).  
   Outputs obtained by another user (and run with the same number of processors) 
   should agree with these, possibly with relatively small differences throughout.
 
7. /sundials/cvodes/fwd_examples/ contains a Makefile and five example programs
   to illustrate the usage of CVODES for forward sensitivity analysis.
   For each example, there is a source file and a two sample output files, 
   and the source file is commented with details of the problem and the
   setup for its solution with CVODES.
      The first three are examples for the serial version of CVODES:
   (a) cvfnx.c has an ODE system based on a 1-D PDE problem, solved with
   the nonstiff option. Solution sensitivities are compuited with respect
   to two of the problem parameters.
   (b) cvfdx.c  has a small kinetics system, solved with the stiff (BDF)
   method and CVDENSE for the linear solver. Solution sensitivities are 
   compuited with respect to three of the problem parameters.
   (c) cvfkx.c has an ODE system based on a 2-D 2-species reaction-transport
   PDE problem, solved with the stiff method and the preconditioned
   Krylov linear solver CVSPGMR. Solution sensitivities are compuited with 
   respect to two of the problem parameters.
      The last two examples are for the parallel version of CVODES:
   (d) pvfnx.c has an ODE system based on a 1-D PDE problem, solved with
   the nonstiff option. Solution sensitivities are compuited with respect
   to two of the problem parameters.
   (e) pvfkx.c has an ODE system based on a 2-D 2-species reaction-transport
   PDE problem, solved with the stiff method and the preconditioned
   Krylov linear solver CVSPGMR. Solution sensitivities are compuited with 
   respect to two of the problem parameters.
       Typing 'make <ex>' in this subdirectory, where <ex> is any of the above
   nine example names (cvdx etc.), finds the required header files etc. and
   generates the corresponding executable file.  Also included are sample
   outputs for the examples (files ending in .out1 contain sample outputs for
   the simultaneous corrector method with full error control, while files
   ending in .out2 contain sample outputs for the staggered corrector method
   with partial error control).  
   Outputs obtained by another user (and run with the same number of processors) 
   should agree with these, possibly with relatively small differences throughout.

8. /sundials/cvodes/adj_examples/ contains a Makefile and five example programs
   to illustrate the usage of CVODES for adjoint sensitivity analysis.
   For each example, there is a source file and a sample output file, 
   and the source file is commented with details of the problem and the
   setup for its solution with CVODES.
      The first four are examples for the serial version of CVODES:
   (a) cvadx.c has an ODE system based on a 1-D PDE problem, solved with
   the nonstiff option. Sensitivity of an integral-form derived function is
   computed with respect to three problem parameters.
   (b) cvabx.c has a simple semi-discretized PDE problem, solved with the
   stiff method and CVBAND for the linear solver. Sensitivity of an 
   integral-form derived function is computed with respect to the intial 
   conditions of the original problem.
   (c) cvakx.c has an ODE system based on a 2-D 2-species reaction-transport
   PDE problem, solved with the stiff method and the preconditioned
   Krylov linear solver CVSPGMR. Sensitivity of an integral-form derived 
   function is computed with respect to the intial conditions of the original 
   problem.
   (d) cvakxb.c solves the same problem as cvakx.c, but instead computes the 
   sensitivity of a 'point-wise derived function' with respect to the intial
   conditions of the original problem.
      The last example is for the parallel version of CVODES:
   (e) pvanx.c has an ODE system based on a 1-D PDE problem, solved with
   the nonstiff option. It computes the sensitivity of a 'point-wise derived 
   function' with respect to two problem parameters and with respect to
   the intial conditions of the original problem.
       Typing 'make <ex>' in this subdirectory, where <ex> is any of the above
   nine example names (cvdx etc.), finds the required header files etc. and
   generates the corresponding executable file.  Also included are sample
   outputs for the examples (with names ending in .out).  
   Outputs obtained by another user (and run with the same number of processors) 
   should agree with these, possibly with relatively small differences throughout.

9. Installing and using CVODES in a different environment requires only
   minor modifications to the various makefiles.  For the compilation
   of CVODES, check the file Makefile in /sundials/cvodes/source/ and the
   files Makefile and nvec***.mk in /sundials/shared/source/, and if
   necessary modify the compiler name and flags, and the path to MPI
   include files.
      To run CVODES on an application in a different directory location,
   the makefiles in /sundials/cvodes/examples/ can be used with minor
   changes.  In the files cvx_ser.mk and cvx_par.mk, correct the
   various paths involved -- the path to the SUNDIALS library and 
   header files and the path to MPI include files.  Also check and correct the
   compiler name and flags.


B. Usage Notes
--------------

(1) See [1] for complete user documentation. The documentation file cvs_guide
    (in both PS and PDF format) is located in /sundials/cvodes/doc/.

(2) For additional documentation of the vector kernels, see the file nvector.h.  
    Also see the files nvector_serial.h and nvector_parallel.h for documentation 
    of M_EnvInit_Serial/M_EnvFree_Serial and M_EnvInit_Parallel/M_EnvFree_Parallel
    as well as accessor macros for the particular NVECTOR implementation.

(3) For further assistance with usage, see the example programs, which
    are heavily annotated.

(4) CVODES can be called from a C++ application, by virtue of wrappers
    around all CVODES header files specifying C-style naming of functions.


C. References
-------------

[1] A. C. Hindmarsh and R. Serban, "User Documentation for CVODES, An ODE Solver 
    with Sensitivity Analysis Capabilities," Lawrence Livermore National Laboratory 
    technical report UCRL-MA-148813, July 2002.


Create and allocate CVODE memory for forward run

Allocate global memory

Forward integration

   g = int_x int_y c6(Tfinal,x,y) dx dy = 35988.913248 


List of Check Points (ncheck = 8)
Check point 8
  address   852ecc0
  t0        9.283192
  t1        10.010684
  next      851be80
Check point 7
  address   851be80
  t0        7.508820
  t1        9.283192
  next      8509040
Check point 6
  address   8509040
  t0        5.734448
  t1        7.508820
  next      84f6200
Check point 5
  address   84f6200
  t0        3.960076
  t1        5.734448
  next      84e33c0
Check point 4
  address   84e33c0
  t0        2.185705
  t1        3.960076
  next      84d0580
Check point 3
  address   84d0580
  t0        0.687664
  t1        2.185705
  next      84b8c18
Check point 2
  address   84b8c18
  t0        0.163471
  t1        0.687664
  next      849c788
Check point 1
  address   849c788
  t0        0.000046
  t1        0.163471
  next      80cf580
Check point 0
  address   80cf580
  t0        0.000000
  t1        0.000046
  next      0

Create and allocate CVODES memory for backward run

Backward integration

Mu(0,x,y) written to file cvakxb.mu

  int_x int_y mu1(0,x,y) dx dy = 0.00049155 
  int_x int_y mu2(0,x,y) dx dy = 0.000464768 
  int_x int_y mu3(0,x,y) dx dy = 0.000440231 
  int_x int_y mu4(0,x,y) dx dy = -4.7628e-13 
  int_x int_y mu5(0,x,y) dx dy = -4.76279e-13 
  int_x int_y mu6(0,x,y) dx dy = -4.76353e-13 
